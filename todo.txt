system("ls -la /proc/$$/fd");
[V] more than 3 >>> error : syntax error near '>>'
[V] malloc: double free bij >>>
[V] file with quotes: open file without quotes
[V]     ; echo hoi should give syntax error near unexpected token ';'
[V] stderror juist doorgeven naar 1 plek
[V] fds worden steeds groter naarmate je meer commands achter elkaar uitvoerd && gebeurt niet bij pipes
[V] exit codes?
[V] env variables $PA shouldn't give path && only [$] works
[V] ~/bin/ //home substitution at ~
[V] test.c/: Not a directory
[V] /test.c/: No such file or directory
[ ] norm maken
[ ] segfault multiple pipes??
[ ] Exit with a number should remember the number
[V] ctrl+c new process //detachen van main process en terminal niet mogelijk
[ ] builtins met hoofdletters
[ ] exit values kloppend maken
[V] cd sdklgh, echo ||| lksghl, cd ksjdg segfault
[ ] ./test.c: permission denied + holds de rest van de string?
[ ] >< only / with echo
[ ] ft_strncmp: altijd lengte checken
[ ] malloc fails checken && exit(1)

Testing cat--------------------------------------------------------
[V] cat $HOME

Testing pipes-------------------------------------------------------
[V] ./github_minishell/gnl/ > outfile //stderror redir needed
[V] error message absolute & relative path
[V] ./minishell
[V] ./minishell hoi hee hallo
[V] ./minishell hoi hee hallo > out
[V] pwd | cat
[V] pwd | cat > out
[V] | //ours: multiline command, real: syntax error near '|'
[V] na 1x output redirection: fd 6,7,8 etc. blijft vol zitten

Testing pipes and redirections-------------------------------------
[V] mini_main.c > out //error message should be promted in terminal
[V] cat > output > output > output | echo hoi
[V] echo > file1 hello >file2 world! > file3 | cat -e
[V] ls >> file3 | cat < file3 //first: bash error && second time : file3 exists
[V] cat > output < output //error cat: input file is output file - should result in empty outfile
[V] cat > outfile | cat < outfile
Tests github--------------------------------------------------------
[V] cat mini_main.c > out | grep if
[V] cat mini_main.c > out | > out1
[V] cat mini_main.c > out > out1 > out2 | echo hello
[V] cat mini_main.c > out > out1 > out2 | cat
[V] cat mini_main.c > out > out1 > out2 ; cat
[V] cat mini_main.c < input (input DOES NOT exist)
[V] cat mini_main.c < input (input DOES exist)
[V] cat mini_main.c | < input
[V] cat <int1 <int2 < int3
[ ] echo $~ should print
[ ] dollar checking if there is an '=' check whats behind the '='
[ ] 

Testing for leaks
[ ] leaks in echo


Tests liewe----------------------------------------------------------
[V] cat /dev/urandom | head -c10 //should not hang
[V] cat | grep 42 //reoutput only if you give 42 in string

